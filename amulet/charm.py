
import os
import sys
import yaml

from . import helpers

class Builder(object):
    def __init__(self, name, template, subordinate=False):
        self.metadata = {'name': name,
                         'summary': 'Generated by Amulet',
                         'description': 'Generated by Amulet',
                         'subordinate': subordinate,
                         'maintainer': 'Amulet Built <juju@lists.ubuntu.com>'}

        if not os.path.exists(template):
            self.template = template

    def require(self, relation, interface, opts):
        self._add_relation(relation, interface, 'requires')

    def provide(self, relation, interface, opts):
        self._add_relation(relation, interface, 'provides')

    def peer(self, relation, interface, opts):
        self._add_relation(relation, interface, 'peers')

    def _add_relation(self, relation, interface, opts={}, name)
        if not name in self.metadata:
            self.metadata[name] = {}

        self.metadata[name][relation] = opts
        self.metadata[name][relation]['interface'] = interface

        self._write_metadata()

    def _write_metadata(self):
        
